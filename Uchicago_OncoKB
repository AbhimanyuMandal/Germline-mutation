#After collecting th data from both the cohorts, the genes were compared with the gene list present in the OncoKB database.
##Here, we did the study for the Uchicago dataset and OncoKB database. The top mutated genes that were present in both the Uchicago dataset 
and the OncoKB database were used for further study, such as survival analysis
##Samples were divided into two groups: Mutation-positive (having mutation=TRUE) and Mutation-negative groups (having mutation=FALSE). 
OncoPlot, MafSummary were plotted for visualizing the top mutated genes in Uchicago cohort


setwd("/mnt/swift/abhimanyu")
OncoKB <- read_tsv("cancerGeneList.tsv")
OncoKB_gene <- OncoKB$`Hugo Symbol`
WES2_gene <-WES2@data$Hugo_Symbol
WES2_data <- WES2@data

#ICGC and OncoKB
common_genes_OncoKB_Uchicago <- intersect(WES2_gene, OncoKB_gene)
# Count mutations per gene across all samples
mutation_counts_Uchicago <- table(WES2_data$Hugo_Symbol)
# Sort the genes based on mutation frequency
sorted_counts_Uchicago <- as.data.frame(sort(mutation_counts_Uchicago, decreasing = TRUE))

# Filter out these genes
WES2_filtered <- WES2
WES2_filtered@data <- WES2_filtered@data[WES2_filtered@data$Hugo_Symbol %in% common_genes_OncoKB_Uchicago, ]
WES2_filtered@gene.summary <- WES2_filtered@gene.summary[WES2_filtered@gene.summary$Hugo_Symbol %in% common_genes_OncoKB_Uchicago, ]

# Test for interactions in the filtered dataset
check <- data.frame(somaticInteractions(maf = WES2_filtered,top = 18, showCounts = TRUE))
somaticInteractions(maf = WES2_filtered,top = 18, fontSize = 0.55, pvalue = c(0.05, 0.1)) #Co-occurence plot 

#Load clinical data of Uchicago
sample2 <- read.delim("Sequencing_sample_tumor_normal_match.txt") #total sample
clinicalinfo_WES2 <- read_excel("Uchicago-clinicalInfo.xlsx") # 79 samples, one of them has NA value (6002953)

genes_of_interest <- c("MLH1","FAT1","LRP1B","NSD1","KMT2D","BRCA1","BRCA2","FANCA","NOTCH2","ROS1","TRIP11","UBR5","BRIP1","EP300","FANCM","NOTCH3","PIK3C2B","RNF213")

WES2_data$has_mutation <- WES2_data$Hugo_Symbol %in% genes_of_interest #TRUE or FALSE for mutation
clinical_wes2 <- sample2 %>% filter(TUMOR.Sample.ID %in% clinicalinfo_WES2$SUBJECT_ID) #Filter out the samples having the mutation

#clinical_WES2 <- clinicalinfo_WES2 
clinicalinfo_WES2$vital_stats <- ifelse(clinicalinfo_WES2$alive_or_dead == "Deceased", 1,0) #1 or 0 for survival analysis


mutation_summary2 <- WES2_data %>% group_by(Tumor_Sample_Barcode) %>% summarize(has_mutation = any(has_mutation))

colnames(clinical_wes2)[colnames(clinical_wes2) == "NORMAL.Sample.ID"] <- "Tumor_Sample_Barcode"
wes2 <- merge(clinical_wes2, mutation_summary2, by = "Tumor_Sample_Barcode", all.y = TRUE)

colnames(wes2)[colnames(wes2) == "TUMOR.Sample.ID"] <- "SUBJECT_ID"
final_WES2 <- merge(clinicalinfo_WES2, wes2, by = "SUBJECT_ID", all.y = TRUE)

#Survival analysis
# Assuming 'time' is the survival time and 'status' indicates the event (1 for event occurred, 0 for censored)
final_WES2$OS_time <- as.numeric(final_WES2$OS_time)
surv_obj <- Surv(final_WES2$OS_time, final_WES2$vital_stats)
# Fit a survival curve
fit <- survfit(surv_obj ~ has_mutation, data = final_WES2)
# Plot the survival curves
ggsurvplot(fit,data = final_WES2,pval = TRUE,palette = c("#0000FF","#FF0000"))

WES2_with_mutation <- subset(final_WES2, has_mutation == TRUE)
mean(WES2_with_mutation$age)
sd(WES2_with_mutation$age)
table(WES2_with_mutation$sex)
table(WES2_with_mutation$alcohol)
table(WES2_with_mutation$race)
table(WES2_with_mutation$tobacco)
table(WES2_with_mutation$HPV.status)

WES2_without_mutation <- subset(final_WES2, has_mutation == FALSE)
mean(WES2_without_mutation$age)
sd(WES2_without_mutation$age)
table(WES2_without_mutation$sex)
table(WES2_without_mutation$alcohol)
table(WES2_without_mutation$race)
table(WES2_without_mutation$tobacco)
table(WES2_without_mutation$HPV.status)

t.test.result <- t.test(WES2_with_mutation$age,WES2_without_mutation$age)
print(t.test.result)

#Oncoplot
oncoplot(maf=WES2_filtered, top=30, fontSize = 0.55) #Oncoplot for Uchicago data

#Maf summary
plotmafSummary(maf = WES2_filtered, rmOutlier = TRUE, addStat = 'median', dashboard = TRUE, 
               titvRaw = FALSE, top = 30,showBarcodes = TRUE,textSize = 0.5) #Summary data for ICGC data

mafSummary <- getGeneSummary(WES2_filtered)
write_csv(mafSummary,"WES2_Gene_mutation_summary.csv")

